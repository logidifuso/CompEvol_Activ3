# Gramática Backus-Naur utilizada en el problema

# Reglas de producción

<code> ::= def f(x):{:return <expr>:}

<expr> ::= <signo><real>*<K_G> | <signo><real>*<K_G><expr> | <signo><real>*<K_P> | <signo><real>*<K_P><expr> | <signo><real>*<K_S> | <signo><real>*<K_S><expr>

<K_G> ::= np.exp(-<real>*(<real> - x)**2)<nulo>

<K_P> ::= ((<real>*x + <real>)**<grado>)

<K_S> ::= np.tanh(<real>*x + <real>)<nulo>

<signo> ::= + | -

<real> ::= <uno-nueve>.<cero-nueve>e<signo><cero-nueve>

<nulo> ::= |

<grado> ::= 0 | 1 | 2 | 3 | 4

<uno-nueve> ::= 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

<cero-nueve> ::= 0 |1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9